openapi: 3.0.3
info:
  title: CryptoExchange Account & Session Management API
  description: API endpoints for managing user sessions, OAuth provider linking, and MFA method administration
  version: 1.0.0
  contact:
    name: CryptoExchange API Support
    url: https://app.cryptoexchange.com

servers:
  - url: https://api.cryptoexchange.com
    description: Production server

security:
  - bearerAuth: []

paths:
  /api/v1/auth/sessions/current:
    get:
      summary: Get Current Session
      description: Retrieve information about the current user session
      tags:
        - Session Management
      responses:
        '200':
          description: Current session retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrentSessionResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/sessions/{session_id}:
    delete:
      summary: Terminate Session
      description: Terminate a specific user session
      tags:
        - Session Management
      parameters:
        - name: session_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440011"
      responses:
        '200':
          description: Session terminated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminateSessionResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Session not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/sessions:
    get:
      summary: Get User Sessions
      description: Retrieve list of user sessions with optional filtering
      tags:
        - Session Management
      parameters:
        - name: active_only
          in: query
          description: Filter to show only active sessions
          schema:
            type: boolean
            default: true
        - name: limit
          in: query
          description: Number of results to return
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Pagination offset
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: User sessions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSessionsResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/oauth/profile/{provider}:
    get:
      summary: Get OAuth User Profile
      description: Retrieve OAuth profile information for a specific provider
      tags:
        - OAuth Management
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [google, github]
          example: "google"
      responses:
        '200':
          description: OAuth profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthProfileResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: OAuth provider not linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/oauth/link:
    post:
      summary: Link OAuth Provider to Existing Account
      description: Link an OAuth provider to the current user account
      tags:
        - OAuth Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - provider
                - authorization_code
                - state
                - redirect_uri
              properties:
                provider:
                  type: string
                  enum: [google, github]
                  example: "google"
                authorization_code:
                  type: string
                  example: "auth_code_from_provider"
                state:
                  type: string
                  example: "550e8400-e29b-41d4-a716-446655440013"
                redirect_uri:
                  type: string
                  format: uri
                  example: "https://app.cryptoexchange.com/auth/callback"
      responses:
        '200':
          description: OAuth provider linked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthLinkResponse'
        '400':
          description: Provider already linked or invalid code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/oauth/link/{provider}:
    delete:
      summary: Unlink OAuth Provider
      description: Remove OAuth provider link from user account
      tags:
        - OAuth Management
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            type: string
            enum: [google, github]
          example: "google"
      responses:
        '200':
          description: OAuth provider unlinked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthUnlinkResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: OAuth provider not linked
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/oauth/linked:
    get:
      summary: Get Linked OAuth Providers
      description: Retrieve list of OAuth providers linked to user account
      tags:
        - OAuth Management
      responses:
        '200':
          description: Linked OAuth providers retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedOAuthProvidersResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/mfa/methods:
    get:
      summary: List User MFA Methods
      description: Retrieve list of configured MFA methods for the user
      tags:
        - MFA Management
      responses:
        '200':
          description: MFA methods retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFAMethodsResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/mfa/methods/{method_id}:
    delete:
      summary: Disable MFA Method
      description: Remove an MFA method from user account
      tags:
        - MFA Management
      parameters:
        - name: method_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "550e8400-e29b-41d4-a716-446655440016"
      responses:
        '200':
          description: MFA method disabled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableMFAMethodResponse'
        '400':
          description: Invalid password or backup code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: MFA method not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/mfa/backup-codes/regenerate:
    post:
      summary: Generate New Backup Codes
      description: Generate new MFA backup codes, invalidating existing ones
      tags:
        - MFA Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  example: "SecurePassword123!"
      responses:
        '200':
          description: Backup codes regenerated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegenerateBackupCodesResponse'
        '400':
          description: Invalid password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - invalid access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SessionInfo:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440011"
        user_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440010"
        created_at:
          type: string
          format: date-time
          example: "2024-06-24T12:00:00Z"
        expires_at:
          type: string
          format: date-time
          example: "2024-06-24T20:00:00Z"
        last_active_at:
          type: string
          format: date-time
          example: "2024-06-24T12:30:00Z"
        ip_address:
          type: string
          format: ipv4
          example: "192.168.1.1"
        user_agent:
          type: string
          example: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36"
        device_id:
          type: string
          example: "device_fingerprint_abc123"
        is_active:
          type: boolean
          example: true
        is_current:
          type: boolean
          example: true

    CurrentSessionResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/SessionInfo'

    TerminateSessionResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            session_id:
              type: string
              format: uuid
              example: "550e8400-e29b-41d4-a716-446655440011"
            terminated_at:
              type: string
              format: date-time
              example: "2024-06-24T12:45:00Z"
            termination_reason:
              type: string
              enum: [user_logout, admin_termination, expired, security_violation]
              example: "user_logout"

    UserSessionsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            sessions:
              type: array
              items:
                $ref: '#/components/schemas/SessionInfo'
            total_count:
              type: integer
              example: 1
            has_more:
              type: boolean
              example: false

    OAuthProfileData:
      type: object
      properties:
        email:
          type: string
          format: email
          example: "john@example.com"
        name:
          type: string
          example: "John Doe"
        picture:
          type: string
          format: uri
          example: "https://lh3.googleusercontent.com/..."
        verified_email:
          type: boolean
          example: true

    OAuthProfileResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            mapping_id:
              type: string
              format: uuid
              example: "550e8400-e29b-41d4-a716-446655440004"
            provider:
              type: string
              enum: [google, github]
              example: "google"
            provider_user_id:
              type: string
              example: "google_user_123456"
            profile_data:
              $ref: '#/components/schemas/OAuthProfileData'
            scopes:
              type: array
              items:
                type: string
              example: ["email", "profile"]
            last_used:
              type: string
              format: date-time
              example: "2024-06-24T12:00:00Z"

    OAuthLinkResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            mapping_id:
              type: string
              format: uuid
              example: "550e8400-e29b-41d4-a716-446655440014"
            provider:
              type: string
              enum: [google, github]
              example: "google"
            provider_user_id:
              type: string
              example: "google_user_789012"
            scopes:
              type: array
              items:
                type: string
              example: ["email", "profile"]
            linked_at:
              type: string
              format: date-time
              example: "2024-06-24T12:00:00Z"
            profile_data:
              $ref: '#/components/schemas/OAuthProfileData'

    OAuthUnlinkResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            provider:
              type: string
              enum: [google, github]
              example: "google"
            unlinked_at:
              type: string
              format: date-time
              example: "2024-06-24T12:30:00Z"

    LinkedOAuthProvider:
      type: object
      properties:
        mapping_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440014"
        provider:
          type: string
          enum: [google, github]
          example: "google"
        provider_user_id:
          type: string
          example: "google_user_789012"
        linked_at:
          type: string
          format: date-time
          example: "2024-06-24T12:00:00Z"
        last_used:
          type: string
          format: date-time
          example: "2024-06-24T12:00:00Z"
        scopes:
          type: array
          items:
            type: string
          example: ["email", "profile"]

    LinkedOAuthProvidersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/LinkedOAuthProvider'

    MFAMethod:
      type: object
      properties:
        mfa_method_id:
          type: string
          format: uuid
          example: "550e8400-e29b-41d4-a716-446655440016"
        type:
          type: string
          enum: [webauthn, biometric, totp]
          example: "webauthn"
        device_name:
          type: string
          example: "YubiKey 5 NFC"
        biometric_type:
          type: string
          enum: [fingerprint, face, voice]
          example: "fingerprint"
        created_at:
          type: string
          format: date-time
          example: "2024-06-24T12:00:00Z"
        last_used:
          type: string
          format: date-time
          example: "2024-06-24T11:30:00Z"
        is_primary:
          type: boolean
          example: true

    MFAMethodsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items:
            $ref: '#/components/schemas/MFAMethod'

    DisableMFAMethodResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            mfa_method_id:
              type: string
              format: uuid
              example: "550e8400-e29b-41d4-a716-446655440016"
            disabled_at:
              type: string
              format: date-time
              example: "2024-06-24T12:30:00Z"

    BackupCodes:
      type: array
      items:
        type: string
        pattern: "^[A-Z0-9]{6}-[A-Z0-9]{6}$"
      example: ["ABC123-DEF456", "GHI789-JKL012", "MNO345-PQR678", "STU901-VWX234", "YZA567-BCD890"]

    RegenerateBackupCodesResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            backup_codes:
              $ref: '#/components/schemas/BackupCodes'
            generated_at:
              type: string
              format: date-time
              example: "2024-06-24T12:30:00Z"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "SESSION_EXPIRED"
            message:
              type: string
              example: "Session has expired"
            details:
              type: object
              additionalProperties: true

tags:
  - name: Session Management
    description: User session information and lifecycle management
  - name: OAuth Management
    description: OAuth provider linking and profile management
  - name: MFA Management
    description: Multi-factor authentication method administration